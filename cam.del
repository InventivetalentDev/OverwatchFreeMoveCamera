method CameraSpeed()
{
    if(IsButtonHeld(EventPlayer(), Button.SecondaryFire)){
        return 0.1;
    }
    if(IsButtonHeld(EventPlayer(), Button.PrimaryFire)){
        return 1.0;
    }
    return 0.5;
}
macro ToggleKey: IsCommunicating(EventPlayer(), Communication.VoiceLineDown);

playervar define cam = false;
playervar define cameraPos;
playervar define cameraHUD !;
playervar define sphereEffectId;

rule: "Free cam"
Event.OngoingPlayer
if (ToggleKey)
{
    cam = !cam;
}

rule: "Start Camera"
Event.OngoingPlayer
if (cam)
{
    CreateHudText(EventPlayer(), null, "Camera Position:", cameraPos, Location.Left, 4, Color.White, Color.White, Color.Blue);
    cameraHUD = LastTextID();

    CreateEffect(AllPlayers(), Effect.Sphere, Color.Blue, cameraPos, 0.2, EffectRev.VisibleToPositionAndRadius);
    sphereEffectId = LastCreatedEntity();

    cameraPos = EyePosition(EventPlayer());
    StartCamera(EventPlayer(), cameraPos, cameraPos + FacingDirectionOf(EventPlayer()), 25);
    Teleport(EventPlayer(), Vector(0,100,0))
    SetMoveSpeed(EventPlayer(), 0);    
    SetGravity(EventPlayer(), 0);
}



rule: "Stop Camera"
Event.OngoingPlayer
if (!cam)
{
    DestroyHudText(cameraHUD);
    DestroyEffect(sphereEffectId);
    StopCamera(EventPlayer());
    SetMoveSpeed(EventPlayer(), 100);
    SetGravity(EventPlayer(), 100);
}

rule: "TP to camera"
Event.OngoingPlayer
if (cam)
if (IsCommunicating(EventPlayer(), Communication.VoiceLineLeft))
{
    cam = false;
    define storeFacing = FacingDirectionOf(EventPlayer());
    Teleport(EventPlayer(), cameraPos);
    SetFacing(EventPlayer(), storeFacing, Relative.ToWorld);
}


rule: "Move camera"
Event.OngoingPlayer
if (cam)
if (DistanceBetween(Vector(), ThrottleOf(EventPlayer())) > 0)
{
    define x = XOf(ThrottleOf(EventPlayer()));
    define z = ZOf(ThrottleOf(EventPlayer()));

    define right = CrossProduct(FacingDirectionOf(EventPlayer()), Up());

    define scalar ! = CameraSpeed();

    if (x < 0)
        cameraPos += right * scalar;
    else if (x > 0)
        cameraPos -= right * scalar;
    
    if (z > 0)
        cameraPos += FacingDirectionOf(EventPlayer()) * scalar;
    else if (z < 0)
        cameraPos -= FacingDirectionOf(EventPlayer()) * scalar;

    MinWait();
    LoopIfConditionIsTrue();
}

rule: "Move camera down"
Event.OngoingPlayer
if (cam)
if (IsButtonHeld(EventPlayer(), Button.Crouch))
{
    cameraPos += Down() * CameraSpeed();
    MinWait();
    LoopIfConditionIsTrue();
}


rule: "Move camera up"
Event.OngoingPlayer
if (cam)
if (IsButtonHeld(EventPlayer(), Button.Jump))
{
    cameraPos += Up() * CameraSpeed();
    MinWait();
    LoopIfConditionIsTrue();
}

